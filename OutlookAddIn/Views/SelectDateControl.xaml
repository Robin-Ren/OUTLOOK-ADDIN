<UserControl x:Class="OutlookAddIn.SelectDateControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:materialDesign="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
             mc:Ignorable="d" 
             xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             xmlns:viewModel="clr-namespace:OutlookAddin.Domain"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
             xmlns:fa="http://schemas.fontawesome.io/icons/"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="16"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Font.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Brown.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/MaterialDesignColor.DeepPurple.Primary.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
                <ResourceDictionary Source="pack://application:,,,/ShowMeTheXAML.AvalonEdit;component/Themes/xamldisplayer.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DialogHost.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Calendar.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Color x:Key="Primary500Foreground">#DDFFFFFF</Color>
            <Color x:Key="Primary400">#8d6e63</Color>
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush" Color="{StaticResource Primary500Foreground}" po:Freeze="True" />
            <SolidColorBrush x:Key="Primary400Brush" Color="{StaticResource Primary400}" po:Freeze="True" />
        </ResourceDictionary>
    </UserControl.Resources>
    <AdornerDecorator>
        <DockPanel DockPanel.Dock="Top" LastChildFill="False">
            <materialDesign:ColorZone DockPanel.Dock="Top" Mode="PrimaryMid" Padding="0 6 0 6"
                                      materialDesign:ShadowAssist.ShadowDepth="Depth3">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                    <Button Style="{StaticResource MaterialDesignToolForegroundButton}"
                            Command="{Binding Path=BackToRoomsCommand}"
                            HorizontalAlignment="Right">
                        <materialDesign:PackIcon Kind="ArrowLeft" HorizontalAlignment="Left" />
                    </Button>
                    <TextBlock Margin="0" Text="Select Timeslot(s)" HorizontalAlignment="Center" VerticalAlignment="Center"
                               FontWeight="Bold" FontSize="18"/>
                </StackPanel>
            </materialDesign:ColorZone>
            <Grid Margin="5,25,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40" />
                    <RowDefinition Height="350" />
                    <RowDefinition Height="100" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100" />
                    <ColumnDefinition Width="300" />
                </Grid.ColumnDefinitions>

                <fa:ImageAwesome Grid.Row="1" Grid.ColumnSpan="2"
                                 Width="40" Foreground="BurlyWood"
                                 Icon="Refresh" Spin="true"
                                 Visibility="{Binding Path=IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                    HorizontalAlignment="Center"
                                 VerticalAlignment="Top"/>
                <DatePicker Grid.Row="0" Grid.Column="1"
                    x:Name="FutureDatePicker"
                        materialDesign:HintAssist.Hint="Pick Date" Margin="40,0,100,0" VerticalAlignment="Top">
                    <DatePicker.SelectedDate>
                        <Binding Path="SelectedDate" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <viewModel:FutureDateValidationRule ValidatesOnTargetUpdated="True" />
                            </Binding.ValidationRules>
                        </Binding>
                    </DatePicker.SelectedDate>
                </DatePicker>
                <Label Grid.Row="0" Grid.Column="0"
                       Content="Time Slots" HorizontalAlignment="Left" 
                       Margin="0,0,0,0" VerticalAlignment="Top"
                       FontWeight="Bold"/>
                <ScrollViewer Grid.Row="1" Grid.ColumnSpan="2"
                              VerticalScrollBarVisibility="Auto">
                    <ItemsControl 
                              ItemsSource="{Binding TimeSlotsOfSelectedDate}"
                              Grid.IsSharedSizeScope="True"
                              Margin="12 12 12 0" Name="ItemControlTimeslots">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type viewModel:TimeSlot}">
                                <Border x:Name="Border" Padding="8"
                                        IsEnabled="{Binding available}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseLeftButtonUp">
                                            <i:InvokeCommandAction 
                            Command="{Binding ElementName=ItemControlTimeslots, Path=DataContext.SelectTimeslotCommand}"
                            CommandParameter="{Binding}">
                                            </i:InvokeCommandAction>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Checkerz" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <CheckBox Grid.Column="0" VerticalAlignment="Center"
                                                  IsChecked="{Binding isSelected}"
                                                  IsHitTestVisible="false"
                                                  Focusable="False"/>
                                        <StackPanel Margin="8 0 0 0" Grid.Column="1">
                                            <TextBlock FontWeight="Bold" Text="{Binding name}" />
                                            <TextBlock Text="{Binding status}">
                                                <TextBlock.Style>
                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding available}" Value="False">
                                                                <Setter Property="Foreground" Value="Red" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <DataTemplate.Triggers>
                                    <DataTrigger Binding="{Binding isSelected}" Value="True">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding available}" Value="False">
                                        <Setter TargetName="Border" Property="Background" Value="{DynamicResource GrayBrush8}" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </ScrollViewer>
                <StackPanel Grid.Row="2" Grid.ColumnSpan="2"
                Orientation="Horizontal" Height="60px"
                            HorizontalAlignment="Center">
                    <Button Style="{StaticResource MaterialDesignRaisedButton}"
                                        Command="{Binding Path=NavigateToConfirmAppointmentDialogCommand}"
                        Width="200" Height="38" Margin="8 0 16 16"
                        materialDesign:RippleAssist.Feedback="#DD000000"
                        materialDesign:ShadowAssist.ShadowDepth="Depth3"
                        Content="Accept" />
                </StackPanel>
            </Grid>
        </DockPanel>
    </AdornerDecorator>
</UserControl>

